The maze is too much complex to be solved by brute force. 

We need some kind of optimized approach. Dijkstra comes to mind!

Dijkstra algorithm provides a way to find the shortest path between two nodes of a weigthed graph
In this case the weigth of the path depends not only on distance but also on the "turns" so the path

A -> (turn90) -> E    -> (turn90) -> D    -> C
  ->  1000    -> 1002 ->  2002    -> 2006 -> 2008

A -> B -> (turn90) -> C
  -> 8 -> 1008     -> 1010

 ........................
 ........................
 ........................
### # # ### ##### # # ### ...
# # #   #     #R S#     # ...
# # ##### ### # ######### ...
# #F E#       #Q   P# #   ...
# ### # ### ####### # # # ...
#E   D C G# #J K  #O N#   ...
# ##### # ### # ##### ### ...
#A     B#H   I#L     M  # ...
#########################

The first step is to build the graph with all the weigths 